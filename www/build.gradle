
plugins {
    /*
        Were building an executable JVM application

        See: https://docs.gradle.org/current/userguide/application_plugin.html#application_plugin
    */
    id 'application'
    id 'com.github.johnrengelman.shadow' version '7.0.0'
    id "io.vertx.vertx-plugin" version "1.3.0"
    id 'org.graalvm.buildtools.native' version '0.9.17'
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'ch.qos.logback:logback-classic:1.4.4'
    implementation 'ch.qos.logback.contrib:logback-json-classic:0.1.5'
    implementation 'ch.qos.logback.contrib:logback-jackson:0.1.5'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.13.4.2'
    implementation 'io.vertx:vertx-core:4.3.3'
    implementation 'io.vertx:vertx-web-templ-handlebars:4.3.3'
    implementation 'io.vertx:vertx-web:4.3.3'
    implementation 'io.vertx:vertx-web-common:4.3.3'
    implementation 'org.json:json:20220924'
    implementation 'org.slf4j:slf4j-api:2.0.3'

    testImplementation 'io.vertx:vertx-junit5:4.3.3'
    testImplementation 'org.junit.jupiter:junit-jupiter:5.8.2'
    testImplementation 'org.mockito:mockito-core:4.8.1'
}

application {
    mainClass = 'io.vertx.core.Launcher'
}

graalvmNative {
    binaries {
        main {
            javaLauncher = javaToolchains.launcherFor {
                toolchainDetection = false

                buildArgs.add('--allow-incomplete-classpath')

                buildArgs.add('--add-opens=java.base/java.nio=ALL-UNNAMED')
                buildArgs.add('--add-opens=java.base/jdk.internal.misc=ALL-UNNAMED')
                buildArgs.add('--add-opens=java.base/jdk.internal.ref=ALL-UNNAMED')

                buildArgs.add('--trace-class-initialization=ch.qos.logback.classic.Logger')
                buildArgs.add('--trace-object-instantiation=ch.qos.logback.core.AsyncAppenderBase$Worker')
                buildArgs.add('--initialize-at-build-time=org.slf4j.LoggerFactory,ch.qos.logback')
                buildArgs.add('--initialize-at-run-time=io.netty')

                // languageVersion = JavaLanguageVersion.of(17)
                // vendor = JvmVendorSpec.matching("GraalVM Community")
            }
        }
    }
}

vertx {
    mainVerticle = 'vertx.playground.www.MainVerticle'
}

tasks.named('test') {
    useJUnitPlatform()
}
